@import "./functions";

//
// Main theme colors for your brand.
//
// If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
//

$theme-primary: #3f51b5 !default; // Indigo 500
$theme-primary-light: theme-light-variant($theme-primary) !default;
$theme-primary-dark: theme-dark-variant($theme-primary) !default;

// The $theme-secondary* variables should be used for all new projects.
$theme-secondary: #ff4081 !default;
$theme-secondary-light: theme-light-variant($theme-secondary) !default;
$theme-secondary-dark: theme-dark-variant($theme-secondary) !default;

$theme-background: #fff !default; // White

//
// Which set of text colors to use for each main theme color (light or dark).
//

$theme-primary-tone: theme-contrast-tone($theme-primary) !default;
$theme-primary-light-tone: theme-contrast-tone($theme-primary-light) !default;
$theme-primary-dark-tone: theme-contrast-tone($theme-primary-dark) !default;

$theme-secondary-tone: theme-contrast-tone($theme-secondary) !default;
$theme-secondary-light-tone: theme-contrast-tone($theme-secondary-light) !default;
$theme-secondary-dark-tone: theme-contrast-tone($theme-secondary-dark) !default;

$theme-background-tone: theme-contrast-tone($theme-background) !default;

//
// Text colors according to light vs dark and text type.
//

$theme-text-colors: (
  dark: (
    primary: rgba(black, .87),
    secondary: rgba(black, .54),
    hint: rgba(black, .38),
    disabled: rgba(black, .38),
    icon: rgba(black, .38)
  ),
  light: (
    primary: white,
    secondary: rgba(white, .7),
    hint: rgba(white, .5),
    disabled: rgba(white, .5),
    icon: rgba(white, .5)
  )
) !default;

//
// Primary text colors for each of the theme colors.
//

$theme-property-values: (
  // Primary
  primary: $theme-primary,
  primary-light: $theme-primary-light,
  primary-dark: $theme-primary-dark,
  // Secondary
  secondary: $theme-secondary,
  secondary-light: $theme-secondary-light,
  secondary-dark: $theme-secondary-dark,
  // Background
  background: $theme-background,
  // Text-primary on "primary" background
  text-primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), primary),
  text-secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), secondary),
  text-hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), hint),
  text-disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), disabled),
  text-icon-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), icon),
  // Text-primary on "primary-light" background
  text-primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), primary),
  text-secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), secondary),
  text-hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), hint),
  text-disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), disabled),
  text-icon-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), icon),
  // Text-primary on "primary-dark" background
  text-primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), primary),
  text-secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), secondary),
  text-hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), hint),
  text-disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), disabled),
  text-icon-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), icon),
  // Text-primary on "secondary" background
  text-primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), primary),
  text-secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), secondary),
  text-hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), hint),
  text-disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), disabled),
  text-icon-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), icon),
  // Text-primary on "secondary-light" background
  text-primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), primary),
  text-secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), secondary),
  text-hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), hint),
  text-disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), disabled),
  text-icon-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), icon),
  // Text-primary on "secondary-dark" background
  text-primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), primary),
  text-secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), secondary),
  text-hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), hint),
  text-disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), disabled),
  text-icon-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), icon),
  // Text-primary on "background" background
  text-primary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), primary),
  text-secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), secondary),
  text-hint-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), hint),
  text-disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), disabled),
  text-icon-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), icon),
  // Text-primary on "light" background
  text-primary-on-light: map-get(map-get($theme-text-colors, dark), primary),
  text-secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),
  text-hint-on-light: map-get(map-get($theme-text-colors, dark), hint),
  text-disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),
  text-icon-on-light: map-get(map-get($theme-text-colors, dark), icon),
  // Text-primary on "dark" background
  text-primary-on-dark: map-get(map-get($theme-text-colors, light), primary),
  text-secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),
  text-hint-on-dark: map-get(map-get($theme-text-colors, light), hint),
  text-disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),
  text-icon-on-dark: map-get(map-get($theme-text-colors, light), icon)
);

// If `$property` is a literal color value (e.g., `blue`, `#fff`), it is returned verbatim. Otherwise, the value of the
// corresponding theme property (from `$theme-property-values`) is returned. If `$property` is not a color and no
// such theme property exists, an error is thrown.
//
// This is mainly useful in situations where `theme-prop` cannot be used directly (e.g., `box-shadow`).
//
// Examples:
//
// 1. theme-prop-value(primary) => "#3f51b5"
// 2. theme-prop-value(blue)    => "blue"
//
// NOTE: This function must be defined in _variables.scss instead of _functions.scss to avoid circular imports.
@function theme-prop-value($property) {
  @if type-of($property) == color {
    @return $property;
  }

  @if not map-has-key($theme-property-values, $property) {
    @error "Invalid theme property: '#{$property}'. Choose one of: #{map-keys($theme-property-values)}";
  }
  @return map-get($theme-property-values, $property);
}